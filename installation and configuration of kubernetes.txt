#1. create a new vpc and allow all ports internally
#2. launch 1 master with min of 2 cpu (mandatory) under newly created VPC
#3. launch 2 or 3 nodes as per your requirement (CPUs : Optional) under the same VPC like master server

#4. Disable firewalld  

systemctl disable firewalld
systemctl stop firewalld

#5. swapoff
swapoff -a

#6. Disable selinux
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

#7. install yum repo for kubernetes

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

#8. install docker, kubeadm, kubelet and kubectl
yum update -y
yum install docker kubeadm kubelet kubectl --disableexcludes=kubernetes -y
systemctl enable --now kubelet


systemctl enable docker && service docker start
systemctl enable kubelet && service kubelet start


#9. Some users on RHEL/CentOS 7 have reported issues with traffic being routed incorrectly due to iptables being bypassed. You should ensure net.bridge.bridge-nf-call-iptables is set to 1 in your sysctl config, e.g.

cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl --system


sysctl net.bridge.bridge-nf-call-iptables=1
sysctl net.ipv4.ip_forward=1
sysctl --system

echo "1" > /proc/sys/net/ipv4/ip_forward


systemctl daemon-reload
systemctl restart kubelet 




run in master


kubeadm init --pod-network-cidr=10.0.1.0/16

go to worker and run below command

kubeadm join --token jprnz2.wf8b3qj8k9756ur3 172.31.9.59:6443 --discovery-token-ca-cert-hash sha256:23c9e78237ee75aacc6f7be93b8bed101361d29dadf20ac16e61f53d0ab99224

go to master and run below commands

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl get nodes






